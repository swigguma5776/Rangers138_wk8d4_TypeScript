(()=>{"use strict";const t={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let e;const n=new Uint8Array(16);function s(){if(!e&&(e="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!e))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return e(n)}const a=[];for(let t=0;t<256;++t)a.push((t+256).toString(16).slice(1));const d=function(e,n,d){if(t.randomUUID&&!n&&!e)return t.randomUUID();const o=(e=e||{}).random||(e.rng||s)();if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,n){d=d||0;for(let t=0;t<16;++t)n[d+t]=o[t];return n}return function(t,e=0){return a[t[e+0]]+a[t[e+1]]+a[t[e+2]]+a[t[e+3]]+"-"+a[t[e+4]]+a[t[e+5]]+"-"+a[t[e+6]]+a[t[e+7]]+"-"+a[t[e+8]]+a[t[e+9]]+"-"+a[t[e+10]]+a[t[e+11]]+a[t[e+12]]+a[t[e+13]]+a[t[e+14]]+a[t[e+15]]}(o)};class o{constructor(t,e,n,s){this.name=t,this.description=e,this.deadline=n,this.category=s,this._id=d()}get id(){return this._id}}let r=document.getElementById("taskForm");const c=new class{constructor(){this.tasks=[]}addTask(t){this.tasks.push(t),this.updateTaskList()}removeTask(t){const e=this.tasks.findIndex((e=>e.id===t));-1!==e&&this.tasks.splice(e,1),this.updateTaskList()}updateTaskList(){const t=document.getElementById("tasks");t.innerHTML="",this.tasks.forEach((e=>{const n=`\n            \n                <div class="card mb-3 rounded">\n                    <div class="card-body">\n                        <h5 class="card-title">Title: ${e.name}</h5>\n                        <p class="card-text">Description: ${e.description}</p>\n                        <p class="card-text">Deadline: ${e.deadline}</p>\n                        <p class="card-text">Category: ${e.category}</p>\n                        <button type="submit" class="btn btn-danger btn-sm" data-task=${e.id}>Remove</button>\n                    </div>\n                </div>\n            `;t.insertAdjacentHTML("beforeend",n)})),t.querySelectorAll(".btn-danger").forEach((t=>{t.addEventListener("click",(()=>{const e=t.getAttribute("data-task");e&&this.removeTask(e)}))}))}};r.addEventListener("submit",(t=>{t.preventDefault();const e=document.getElementById("taskName"),n=document.getElementById("description"),s=document.getElementById("deadline"),a=document.getElementById("category");let d=e.value,i=n.value,u=new Date(s.value),l=a.value;console.log(d,i,u,l);const m=new o(d,i,u,l);c.addTask(m),r.reset()}))})();